j main

FUNC_Fibonacci:
sub $sp, $sp, 8
sw $fp, 0($sp)
sw $ra, 4($sp)
move $fp, $sp
sub $sp, $sp, 4
move $t0, $a0
sub $sp, $sp, 4
li $t1, 0

L0:
li $t3, 2
slt $t2, $t0, $t3
xori $t2, $t2, 0x1
bne $t2, $zero, L1
move $t1, $t0
j L3
L1:
L2:
addi $t2, $t0, -1
move $a0, $t2
sw $t1, -8($fp)
sw $t0, -4($fp)
jal FUNC_Fibonacci
move $t0, $v0

lw $t1, 20($fp)
addi $t2, $t1, -2
move $a0, $t2
sw $t1, -8($fp)
jal FUNC_Fibonacci
move $t2, $v0

add $t4, $t1, $t2
lw $t1, 16($fp)
move $t1, $t4
L3:
addi $sp, $sp, 8 # Incrementem el que hem restat al stack 
lw $fp, 0($sp)
lw $ra, 4($sp)
addi $sp, $sp, 8
move $v0, $t1
jr $ra

main:
move $fp, $sp
li $t0, 6
move $a0, $t0
jal FUNC_Fibonacci
move $t0, $v0

sub $sp, $sp, 4
move $t1, $t0

syscall # Finalitzem el programa
